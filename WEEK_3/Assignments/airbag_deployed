/*Use case: Pressure sensor data is used to detect the pedestrian collision to vehicle. Based on collision data vehicle will deploy pedestrian airbag to protect the pedestrian.
How it is works:
Pressure sensor right (PR) is sending data through I2C protocol to Micro Controller for every 1 ms.
Pressure sensor left (PL) is sending data through I2C protocol to Micro Controller for every 1 ms.
Pressure sensor center (PC) is sending data through I2C protocol to Micro Controller for every 1 ms.
Micro Controller is collecting data of pressure sensors for every 5 ms sample and constructing the data to be processed for decision making of pedestrian airbag deployment.
After constructing the F_P_Data decision of pedestrian airbag deployment is done based on below rules:
1.Require minimum 3 samples from each pressure sensor (Left,Center,Right) in F_P_Data array
2.Pressure sensor data <0x05 are considered as noise
3.Pressure sensor data >0xF5 are considered as noise
4.All samples in F_P_Data are valid data
5.Continuously 5 samples in F_P_Data are having more threshold than 0x55 then pedestrian airbag will be deployed
How to implement:
1. PR, PL, PC data should be input from user/hardcoded to the program and minimum of 50 samples to be passed for each sensor
2. Print data what is received by user 
3. Write function to construct F_P_Data array form PL, PC, PR sensors and return array of F_P_Data array
4. Write function which will return decision of pedestrian airbag deployment based on F_P_Data array and also return values it considered to take the decision*/


ALGORITHM:
1.start
2.PR, PL, PC data should be input 50 samples using array and print that 50 samples
3.calling merge data function to collect only the valid data from the 3 sensor values or arrays
4.filtering out the data from the 150 values
5.function defnition for merging or filtering the data
6.data filtered out by avoiding data lesss than 0x05 and more than 0xf5
7.data mmust be sampled in 5 ms
8.first sample must be right then center left
9.if the data sampled is faulty then take the next sample coming after 5 ms
10.same thing done for the right sensor is to be implemented for the center sensor
11.if it got a valid data then increment the left index with center index+5
12.function for check the requirements for deploying the air bag
12.when it read continuos value that is greater then 0x55 then return specified value and compare it
13.with the value in main and do the correponding work
 


#include<stdio.h>
#include<string.h>
int i=0,center_index=0,left_index=0,x=0,right_index=0,val=0,size;//global declaration
void merge_data(int *,int *,int *,char *);//function declaration
int airbag_deploy(char *,int);

int main()
{

	char f_p_data[20];			//decalring array for storing valid data
	int pr[50] = {1,2,3,4,5,86,7,8,9,10,1,12,13,14,15,16,17,18,19,20,89,22,23,24,25,26,27,28,29,30,31,32,33,34,35,92,37,38,39,40,41,42,43,44,45,46,47,48,49,50};
	int pc[50] = {1,2,3,4,5,6,7,8,9,10,87,12,13,14,15,16,17,18,19,20,21,22,23,24,25,90,27,28,29,30,31,32,33,34,35,36,37,38,39,40,246,42,43,44,45,46,47,48,49,50};
	int pl[50] = {1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,88,17,18,19,20,21,22,23,24,25,26,27,28,29,30,91,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50};
        printf("\nPL time\t\tPL data\t\tPL time\t\tPL data\t\tPL time\t\tPL data");
	for(int i=0;i<50;i++)
	{
		printf("\n%d\t\t0x%x\t\t%d\t\t0x%x\t\t%d\t\t0x%x\t\t",i+1,pr[i],i+1,pc[i],i+1,pl[i]);
	}
/

	merge_data(&pr,&pc,&pl,&f_p_data);
    size = strlen(f_p_data);
	val = airbag_deploy(&f_p_data,size);			//calling function to check the requirement for deploying the airbag asnd assignhing the value to a variable
	if(val == 5)								//if it return specified value print airbag deployed
		printf("\n airbag deployed");
	else
		printf("\n not deployed");
}
void merge_data(int * right,int * center,int *left,char * sensor_data)		//accepeting 4 addr as parameters
{
	printf("\n\n");
	for(i=0;i<50;i=i+5)						//loop for continues working of the block until the index 50 reached
	{
	while(right_index<50)					//iterate until specified condition meet or right index value greater than 50
	{
		if(*(right+right_index) >0x05 && *(right+right_index) < 0xf5)		//check weather the value is in specified range
		{
			*(sensor_data+x) = *(right+right_index);						//then save the value to the declared array with index starts from 0
			printf("\nright\t = %d\t%d\t%x\t%x",right_index,x,*(sensor_data+x),*(right+right_index));		//printing the value for debugging purpose
			x=x+1;								//increment sensor data array index by 1
			i=i+5;								//increment the i loop index with 5
			center_index=right_index+5;			//increment the center index with 5
			break;								//break from right sensor loop

		}
		else									//if condition is not met need to find the next value(next 5th) and campare the same
			{
			right_index=right_index+5;			//right index incremented by 5
			i=i+5;								//i loop also incremented by 5
			continue;}	}						//again continue the process until it gets a valid value


	while(center_index<50)
		{
			if(*(center+center_index) >0x05 && *(center+center_index) < 0xf5)
			{
				*(sensor_data+x) = *(center+center_index);
				printf("\ncenter\t= %d\t%d\t%x\t%x",center_index,x,*(sensor_data+x),*(center+center_index));
				x=x+1;
				i=i+5;
				left_index=center_index+5;
				break;
			}
			else
				{center_index=center_index+5;
				i=i+5;
				continue;
				}
		}
	
while(left_index<50)
		{
			if(*(left+left_index) >0x05 && *(left+left_index) < 0xf5)
			{
				*(sensor_data+x) = *(left+left_index);
				printf("\nleft\t= %d\t%d\t%x\t%x",left_index,x,*(sensor_data+x),*(left+left_index));
				x=x+1;
				right_index=left_index+5;
				i=i+5;
				break;
			}
			else{
				left_index=left_index+5;
				i=i+5;
				continue;
			}
		}

	}
   }
int airbag_deploy(char * fp_data,int size)
{
	int count = 0;
	for(int i = 0;i<size;i++)
	{
		if(fp_data[i]>0x55)
		{
			count++;
			if(count == 5)
				break;
		}
		else
			count = 0;

	}
	return count;
}
